name: Deploy Lambda
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'intg'
      toDeploy:
        description: 'Version to deploy'
        required: true

permissions:
  id-token: write
  contents: write
  actions: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials from management account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_NUMBER }}:role/TDRGithubActionsDeployLambda${{ secrets.TITLE_STAGE }}
          aws-region: eu-west-2
          role-session-name: DeployLambda
      - name: Deploy lambda
        run: |
          aws lambda update-function-code --function-name tdr-create-keycloak-user-s3-${{ github.event.inputs.environment }} --s3-bucket tdr-backend-checks-${{ github.event.inputs.environment }} --s3-key ${{ github.event.inputs.toDeploy }}/keycloak-user-management.jar > /dev/null
          aws lambda update-function-code --function-name tdr-create-keycloak-user-api-${{ github.event.inputs.environment }} --s3-bucket tdr-backend-checks-${{ github.event.inputs.environment }} --s3-key ${{ github.event.inputs.toDeploy }}/keycloak-user-management.jar > /dev/null
      - name: Send service updated message
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "service" : "Keycloak user management",
              "version" : "${{ github.event.inputs.toDeploy }}",
              "environment": "${{ github.event.inputs.environment }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_SUCCESS_WORKFLOW }}
      - name: Update release branch
        run: |
          git branch -f release-${{ github.event.inputs.environment }} HEAD
          git push -f origin release-${{ github.event.inputs.environment }}
      - name: Send failure message
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        if: ${{ failure() }}
        with:
          payload: |
            {
              "service" : "Keycloak user management",
              "version" : "${{ github.event.inputs.toDeploy }}",
              "environment": "${{ github.event.inputs.environment }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_FAILURE_WORKFLOW }}
